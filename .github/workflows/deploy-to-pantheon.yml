name: Deploy to WPNext-Test

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'scripts/*'
      - 'README.md'
  workflow_dispatch:

permissions:
  contents: write
  deployments: write
  statuses: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      git_user_name: "Pantheon Robot"
      git_user_email: "bot@getpantheon.com"
    concurrency:
      group: ${{ github.workflow }}-main
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Configure Git
        run: |
          git config --global user.name "${{ env.git_user_name }}"
          git config --global user.email "${{ env.git_user_email }}"
          git remote add pantheon ${{ secrets.GIT_REPO }}

      - name: Configure Pantheon Host Key
        run: |
          echo "Host *.drush.in HostKeyAlgorithms +ssh-rsa" >> ~/.ssh/config
          echo "Host *.drush.in PubkeyAcceptedKeyTypes +ssh-rsa" >> ~/.ssh/config
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Get commit message
        id: get_commit
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%s)
          echo "message=$COMMIT_MSG" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: composer install

      - name: Commit build artifacts
        run: |
          GITHUB_MSG="${{ steps.get_github_commit.outputs.message }}"
          echo "GitHub Triggering Commit Message: $GITHUB_MSG"

          git fetch --no-tags --depth=5 pantheon master
          FETCH_EXIT_CODE=$?

          if [ $FETCH_EXIT_CODE -ne 0 ]; then
            echo "WARN: Failed to fetch from Pantheon (Exit Code: $FETCH_EXIT_CODE). Assuming deployment should proceed."
            # Set skip_deploy output to false
            echo "skip_deploy=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Get the message of the latest commit on Pantheon's master branch
          # Use --no-pager to prevent potential interactive prompts
          PANTHEON_LATEST_MSG=$(git --no-pager log -1 --pretty=%s pantheon/master)
          echo "Latest Pantheon Master Commit Message: $PANTHEON_LATEST_MSG"

          # Trim leading/trailing whitespace just in case
          GITHUB_MSG_TRIMMED=$(echo "$GITHUB_MSG" | xargs)
          PANTHEON_LATEST_MSG_TRIMMED=$(echo "$PANTHEON_LATEST_MSG" | xargs)

          if [ "$GITHUB_MSG_TRIMMED" == "$PANTHEON_LATEST_MSG_TRIMMED" ]; then
            echo "GitHub commit message matches the latest Pantheon commit message. Skipping deployment."
            echo "skip_deploy=true" >> $GITHUB_OUTPUT
            exit 0
          else
            # Optional: Compare against Pantheon's second-to-last commit if needed
            # Requires fetch depth >= 2. Add error handling if only 1 commit exists.
            PANTHEON_PREV_MSG=$(git --no-pager log -1 --pretty=%s pantheon/master~1)
            echo "Previous Pantheon Master Commit Message: $PANTHEON_PREV_MSG"
            if [ "$GITHUB_MSG_TRIMMED" == "$(echo "$PANTHEON_PREV_MSG" | xargs)" ]; then
              echo "GitHub commit message matches Pantheon's second-to-last commit message. Skipping deployment."
              echo "skip_deploy=true" >> $GITHUB_OUTPUT
              exit 0
            else
              echo "Commit messages do not match. Proceeding with deployment."
              echo "skip_deploy=false" >> $GITHUB_OUTPUT
            fi
            echo "Commit messages do not match. Proceeding with deployment."
            echo "skip_deploy=false" >> $GITHUB_OUTPUT # Default: proceed if no match
          fi

          git checkout -b master
          git add -A
          if git diff --quiet pantheon/master; then
            echo "No changes to commit."
            echo "skip_deploy=true" >> $GITHUB_ENV
          else
            git commit -m "${{ steps.get_commit.outputs.message }}" || echo "Nothing to commit"
          fi

      - name: Compare commit messages
        id: compare_commits
        run: |
          LAST_COMMIT_MSG=$(git log -1 --pretty=%s)
          PREV_COMMIT_MSG=$(git log -2 --pretty=%s | tail -n 1)
          echo "Last commit message: $LAST_COMMIT_MSG"
          echo "Previous commit message: $PREV_COMMIT_MSG"
          if [ "$LAST_COMMIT_MSG" == "$PREV_COMMIT_MSG" ]; then
            echo "Duplicate commit messages detected. Skipping deployment."
            echo "skip_deploy=true" >> $GITHUB_ENV
          fi

      - name: Push to Pantheon
        if: ${{ env.skip_deploy != 'true' }}
        uses: stevector/push-to-pantheon@0.5.0
        with:
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          machine_token: ${{ secrets.TERMINUS_TOKEN }}
          site: wpnext-test
          git_user_name: ${{ env.git_user_name }}
          git_user_email: ${{ env.git_user_email }}
          git_commit_message: "[Automation] Commit build assets"
